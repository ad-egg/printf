." manpage for _printf

.TH _PRINTF 1 "22 October 2018" "" "User Command"

.SH NAME
_printf \- formats and prints data output to stdout

.SH SYNOPSIS
\fB_printf\fR [\fIARGUMENT\fR] ...
.br
\fB_printf\fR \fIFORMAT-SPECIFIER\fR, [\fIARGUMENT\fR]

.SH DESCRIPTION
Takes [\fIARGUMENT\fR] from standard input and prints it to standard output. If there is a format specifier, prints [\fIARGUMENT\fR] according to \fIFORMAT-SPECIFIER\fR.

.SH RETURN VALUE
\fB_printf\fR returns the number of characters printed, excluding the null byte used to end output to strings.

.SH OPTIONS
\fB_printf\fR handles the following format specifiers: \fB%c\fR, \fB%s\fR, \fB%d\fR, \fB%i\fR.
.PP
.RS
\fB%c\fR     format specifier for characters
.br
\fB%s\fR     format specifier for strings
.br
\fB%d\fR     format specifier for decimal numbers of base 10
.br
\fB%i\fR     format specifier for integers of base 10
.RE

.SH EXAMPLES
To print "Hello, world" followed by a newline, use
.br
.RS
.nf
\fB_printf\fR("Hello, world\\n");
.fi
.RE
.br
To print an integer using a format specifier followed by a newline, use
.br
.RS
.nf
\fB_printf\fR("%i\\n", 1024);
.fi
.RE

.SH AUTHORS
Andrew Lindburg and Athena Deng.
